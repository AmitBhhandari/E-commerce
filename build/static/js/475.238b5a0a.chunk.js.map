{"version":3,"file":"static/js/475.238b5a0a.chunk.js","mappings":"2MACA,EAAuB,oBAAvB,EAAqD,uBAArD,EAAsF,uBAAtF,EAAsH,sB,SC8GtH,EAxGkB,WAChB,IAAMA,GAAgBC,EAAAA,EAAAA,UAChBC,GAAmBD,EAAAA,EAAAA,UACnBE,GAAQC,EAAAA,EAAAA,MAERC,GAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GAEzB,GAA8BC,EAAAA,EAAAA,WAAS,GAAK,eAArCC,EAAO,KAAEC,EAAU,KAC1B,GAAgCF,EAAAA,EAAAA,WAAS,GAAM,eAAxCG,EAAS,KAAEC,EAAU,KA6D5B,OACE,qBAASC,UAAWC,EAAa,WAC/B,wBAAKL,EAAU,QAAU,aACzB,kBAAMM,SA1DY,SAACC,GACrBA,EAAMC,iBACN,IAMIC,EANEC,EAAenB,EAAcoB,QAAQC,MACrCC,EAAcpB,EAAiBkB,QAAQC,MAE7CE,aAAaC,QAAQ,QAASL,GAE9BP,GAAW,GAGTM,EADET,EAEA,oHAGA,wGAEJgB,MACEP,EAEA,CACEQ,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBC,MAAOX,EACPY,SAAUT,EACVU,mBAAmB,IAErBC,QAAS,CACP,eAAgB,sBAInBC,MAAK,SAACC,GAEL,OADAvB,GAAW,GACPuB,EAAIC,GACCD,EAAIE,OAEJF,EAAIE,OAAOH,MAAK,SAACI,GAMtB,MAAM,IAAIC,MALS,yBAMrB,GAEJ,IACCL,MAAK,SAACI,GACNjC,EAAQmC,MAAMF,EAAKG,SACnBtC,EAAQuC,QAAQ,SACjB,IACCC,OAAM,SAACC,GACNC,MAAMD,EAAIE,QACZ,GACJ,EAKkC,WAC5B,iBAAKjC,UAAWC,EAAgB,WAC9B,kBAAOiC,QAAQ,QAAO,yBACtB,kBAAOC,KAAK,QAAQC,GAAG,QAAQC,UAAQ,EAACC,IAAKnD,QAE/C,iBAAKa,UAAWC,EAAgB,WAC9B,kBAAOiC,QAAQ,WAAU,4BACzB,kBACEC,KAAK,WACLC,GAAG,WACHC,UAAQ,EACRC,IAAKjD,QAGT,iBAAKW,UAAWC,EAAgB,WAC5BH,IACA,4BAASF,EAAU,QAAU,mBAE9BE,IAAa,sCACd,mBACEqC,KAAK,SACLnC,UAAWC,EACXsC,QApFoB,WAC5B1C,GAAW,SAAC2C,GAAS,OAAMA,CAAS,GACtC,EAkFyC,SAE9B5C,EAAU,qBAAuB,wCAM9C,C","sources":["webpack://e-commerce-site/./src/Components/Pages/Login.module.css?6371","Components/Pages/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"Login_auth__q5w-X\",\"control\":\"Login_control__+Tp37\",\"actions\":\"Login_actions__6926A\",\"toggle\":\"Login_toggle__0idMb\"};","import { useState, useRef, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LoginContext from \"../Store/LoginContext\";\r\n\r\n\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst LoginForm = () => {\r\n  const emailInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const history=useHistory()\r\n\r\n  const authCtx=useContext(LoginContext)\r\n\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredPswd = passwordInputRef.current.value;\r\n\r\n    localStorage.setItem(\"email\", enteredEmail);\r\n\r\n    setLoading(true);\r\n    let url;\r\n    if (isLogin) {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDWHwhZR4c7ubXaQLCG9oMpHbrJdCvJsVY\";\r\n    } else {\r\n      url =\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDWHwhZR4c7ubXaQLCG9oMpHbrJdCvJsVY\";\r\n    }\r\n    fetch(\r\n      url,\r\n\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: enteredEmail,\r\n          password: enteredPswd,\r\n          returnSecureToken: true,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    )\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          return res.json().then((data) => {\r\n            let errorMessage = \"Authentication failed!\";\r\n            //if (data && data.error && data.error.message) {\r\n            //errorMessage = data.error.message;\r\n            // }\r\n\r\n            throw new Error(errorMessage);\r\n          });\r\n        }\r\n      })\r\n      .then((data) => {\r\n       authCtx.login(data.idToken)\r\n       history.replace('/Store')\r\n      })\r\n      .catch((err) => {\r\n        alert(err.message);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"email\">Your Email</label>\r\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"password\">Your Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            required\r\n            ref={passwordInputRef}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          {!isLoading && (\r\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\r\n          )}\r\n          {isLoading && <p>Loading..</p>}\r\n          <button\r\n            type=\"button\"\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["emailInputRef","useRef","passwordInputRef","history","useHistory","authCtx","useContext","LoginContext","useState","isLogin","setIsLogin","isLoading","setLoading","className","classes","onSubmit","event","preventDefault","url","enteredEmail","current","value","enteredPswd","localStorage","setItem","fetch","method","body","JSON","stringify","email","password","returnSecureToken","headers","then","res","ok","json","data","Error","login","idToken","replace","catch","err","alert","message","htmlFor","type","id","required","ref","onClick","prevState"],"sourceRoot":""}